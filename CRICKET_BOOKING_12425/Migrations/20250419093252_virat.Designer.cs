// <auto-generated />
using System;
using CRICKET_BOOKING_12425.ApplicationContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CRICKET_BOOKING_12425.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20250419093252_virat")]
    partial class virat
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CRICKET_BOOKING_12425.Models.AdminMaster", b =>
                {
                    b.Property<int>("AdminMasterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdminMasterId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CubName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EstabishDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Map")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AdminMasterId");

                    b.ToTable("AdminMasters");
                });

            modelBuilder.Entity("CRICKET_BOOKING_12425.Models.BookingLimet", b =>
                {
                    b.Property<int>("BookingLimetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookingLimetId"));

                    b.Property<int?>("AdminMasterId")
                        .HasColumnType("int");

                    b.Property<int?>("BookingPerson")
                        .HasColumnType("int");

                    b.HasKey("BookingLimetId");

                    b.HasIndex("AdminMasterId");

                    b.ToTable("BookingsLimets");
                });

            modelBuilder.Entity("CRICKET_BOOKING_12425.Models.BookingTeams", b =>
                {
                    b.Property<int>("BookingTeamsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookingTeamsId"));

                    b.Property<int?>("AdminMasterId")
                        .HasColumnType("int");

                    b.Property<DateTime>("BookingDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("BookingLimetId")
                        .HasColumnType("int");

                    b.Property<string>("CaptainName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CricHeroesUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TeamsName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TournamentId")
                        .HasColumnType("int");

                    b.Property<string>("VCaptainName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VContactNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BookingTeamsId");

                    b.HasIndex("AdminMasterId");

                    b.HasIndex("BookingLimetId");

                    b.HasIndex("TournamentId");

                    b.ToTable("BookingsTeams");
                });

            modelBuilder.Entity("CRICKET_BOOKING_12425.Models.Cricket_Matches", b =>
                {
                    b.Property<int>("CricketMatchesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CricketMatchesId"));

                    b.Property<int?>("AdminMasterId")
                        .HasColumnType("int");

                    b.Property<int?>("BookingTeamsId")
                        .HasColumnType("int");

                    b.Property<string>("ClubName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("MatchDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Match_status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Match_type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TeamA")
                        .HasColumnType("int");

                    b.Property<int?>("TeamB")
                        .HasColumnType("int");

                    b.Property<int?>("TournamentId")
                        .HasColumnType("int");

                    b.Property<string>("Venue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CricketMatchesId");

                    b.HasIndex("AdminMasterId");

                    b.HasIndex("BookingTeamsId");

                    b.HasIndex("TournamentId");

                    b.ToTable("CricketMatches");
                });

            modelBuilder.Entity("CRICKET_BOOKING_12425.Models.PoiteTable", b =>
                {
                    b.Property<int>("PoiteTableId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PoiteTableId"));

                    b.Property<int?>("AdminMasterId")
                        .HasColumnType("int");

                    b.Property<int?>("BookingTeamsId")
                        .HasColumnType("int");

                    b.Property<int?>("LostMatch")
                        .HasColumnType("int");

                    b.Property<int?>("PlayMatch")
                        .HasColumnType("int");

                    b.Property<double?>("Poite")
                        .HasColumnType("float");

                    b.Property<int?>("TournamentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("WinMatch")
                        .HasColumnType("int");

                    b.HasKey("PoiteTableId");

                    b.HasIndex("AdminMasterId");

                    b.HasIndex("BookingTeamsId");

                    b.HasIndex("TournamentId");

                    b.ToTable("PoiteTables");
                });

            modelBuilder.Entity("CRICKET_BOOKING_12425.Models.Tournament", b =>
                {
                    b.Property<int>("TournamentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TournamentId"));

                    b.Property<int?>("AdminMasterId")
                        .HasColumnType("int");

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<int?>("BookingLimetId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StarDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TournamentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TournamentType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TournamentId");

                    b.HasIndex("AdminMasterId");

                    b.HasIndex("BookingLimetId");

                    b.ToTable("Tournaments");
                });

            modelBuilder.Entity("CRICKET_BOOKING_12425.Models.BookingLimet", b =>
                {
                    b.HasOne("CRICKET_BOOKING_12425.Models.AdminMaster", "AdminMaster")
                        .WithMany("Bookings")
                        .HasForeignKey("AdminMasterId");

                    b.Navigation("AdminMaster");
                });

            modelBuilder.Entity("CRICKET_BOOKING_12425.Models.BookingTeams", b =>
                {
                    b.HasOne("CRICKET_BOOKING_12425.Models.AdminMaster", "AdminMaster")
                        .WithMany("BookingsTeams")
                        .HasForeignKey("AdminMasterId");

                    b.HasOne("CRICKET_BOOKING_12425.Models.BookingLimet", "BookingLimet")
                        .WithMany("Teams")
                        .HasForeignKey("BookingLimetId");

                    b.HasOne("CRICKET_BOOKING_12425.Models.Tournament", "Tournament")
                        .WithMany()
                        .HasForeignKey("TournamentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AdminMaster");

                    b.Navigation("BookingLimet");

                    b.Navigation("Tournament");
                });

            modelBuilder.Entity("CRICKET_BOOKING_12425.Models.Cricket_Matches", b =>
                {
                    b.HasOne("CRICKET_BOOKING_12425.Models.AdminMaster", "AdminMaster")
                        .WithMany("CricketMatches")
                        .HasForeignKey("AdminMasterId");

                    b.HasOne("CRICKET_BOOKING_12425.Models.BookingTeams", "BookingTeams")
                        .WithMany("CricketMatches")
                        .HasForeignKey("BookingTeamsId");

                    b.HasOne("CRICKET_BOOKING_12425.Models.Tournament", "Tournament")
                        .WithMany("CricketMatches")
                        .HasForeignKey("TournamentId");

                    b.Navigation("AdminMaster");

                    b.Navigation("BookingTeams");

                    b.Navigation("Tournament");
                });

            modelBuilder.Entity("CRICKET_BOOKING_12425.Models.PoiteTable", b =>
                {
                    b.HasOne("CRICKET_BOOKING_12425.Models.AdminMaster", "AdminMaster")
                        .WithMany("Poites")
                        .HasForeignKey("AdminMasterId");

                    b.HasOne("CRICKET_BOOKING_12425.Models.BookingTeams", "BookingTeams")
                        .WithMany("PoiteTable")
                        .HasForeignKey("BookingTeamsId");

                    b.HasOne("CRICKET_BOOKING_12425.Models.Tournament", "Tournament")
                        .WithMany("PoiteTable")
                        .HasForeignKey("TournamentId");

                    b.Navigation("AdminMaster");

                    b.Navigation("BookingTeams");

                    b.Navigation("Tournament");
                });

            modelBuilder.Entity("CRICKET_BOOKING_12425.Models.Tournament", b =>
                {
                    b.HasOne("CRICKET_BOOKING_12425.Models.AdminMaster", "AdminMaster")
                        .WithMany("Tournament")
                        .HasForeignKey("AdminMasterId");

                    b.HasOne("CRICKET_BOOKING_12425.Models.BookingLimet", "BookingLimet")
                        .WithMany()
                        .HasForeignKey("BookingLimetId");

                    b.Navigation("AdminMaster");

                    b.Navigation("BookingLimet");
                });

            modelBuilder.Entity("CRICKET_BOOKING_12425.Models.AdminMaster", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("BookingsTeams");

                    b.Navigation("CricketMatches");

                    b.Navigation("Poites");

                    b.Navigation("Tournament");
                });

            modelBuilder.Entity("CRICKET_BOOKING_12425.Models.BookingLimet", b =>
                {
                    b.Navigation("Teams");
                });

            modelBuilder.Entity("CRICKET_BOOKING_12425.Models.BookingTeams", b =>
                {
                    b.Navigation("CricketMatches");

                    b.Navigation("PoiteTable");
                });

            modelBuilder.Entity("CRICKET_BOOKING_12425.Models.Tournament", b =>
                {
                    b.Navigation("CricketMatches");

                    b.Navigation("PoiteTable");
                });
#pragma warning restore 612, 618
        }
    }
}
